name: Windows C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: List files for debug
      run: dir
    - name: Build with PowerShell script
      run: pwsh -File build-controller.ps1
    - name: List files for debug
      run: dir
    - name: Upload test executable
      uses: actions/upload-artifact@v4
      with:
        name: test_controller
        path: test_controller.exe
    - name: Upload main executable
      uses: actions/upload-artifact@v4
      with:
        name: main_exe
        path: main.exe

  test-unit:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Download test executable
      uses: actions/download-artifact@v4
      with:
        name: test_controller
        path: .\Controller
    - name: Run unit tests
      run: |
        .\Controller\test_controller.exe unit

  test-interface:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Download test executable
      uses: actions/download-artifact@v4
      with:
        name: test_controller
        path: .\Controller
    - name: Download main executable
      uses: actions/download-artifact@v4
      with:
        name: main_exe
        path: .\Controller

    - name: Start main.exe
      run: |
        Start-Process -FilePath ".\Controller\main.exe"
        Start-Sleep -Seconds 2
    - name: Run integration tests
      run: |
        .\Controller\test_controller.exe zmq

  # Release job: runs after both test-interface and test-unit
  release:
    runs-on: windows-latest
    needs: [test-interface, test-unit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download main.exe artifact
        uses: actions/download-artifact@v4
        with:
          name: main_exe
          path: .
      - name: Create build metadata
        run: |
          $meta = @{
            build_time = (Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
            git_commit = (git rev-parse HEAD)
            runner = $env:RUNNER_NAME
          } | ConvertTo-Json
          $meta | Out-File -Encoding utf8 build_metadata.json
      - name: List files for debug
        run: dir
      - name: Zip main.exe and metadata
        run: |
          Compress-Archive -Path main.exe,build_metadata.json -DestinationPath Controller.zip
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Controller Release
          tag_name: controller-release-${{ github.run_number }}
          files: Controller.zip
        env:
          GITHUB_TOKEN: ${{ secrets.RYAN_TOKEN }}
      - name: Trigger Integration pipeline
        if: success() # Only runs if previous steps succeeded
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.RYAN_TOKEN }}
          repository: Axcelis/Integration
          event-type: upstream-ci-passed
          client-payload: '{"source":"controller"}' # or "gui" in GUI repo